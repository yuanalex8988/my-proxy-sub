name: Update Proxy Subscription

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on a schedule (e.g., every 12 hours)
  schedule:
    - cron: '0 */12 * * *' # 北京时间早上8点和晚上8点运行 (UTC 0点和12点)

jobs:
  update:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 运行环境
    steps:
      # 1. Checkout a copy of your repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Fetch the original subscription content
      - name: Fetch Original Subscription
        run: |
          curl -sSL -o original_sub.txt "https://pl.85la.com/trojan/sub" || { echo "Failed to download source subscription."; exit 1; }
          echo "Successfully downloaded source subscription."

      # 3. Base64 encode the entire content
      #    V2RayN expects the *entire* subscription content (multiple lines) to be Base64 encoded.
      #    The '-w 0' option prevents line wrapping in the Base64 output, which is crucial.
      - name: Base64 Encode Subscription
        run: |
          base64 -w 0 original_sub.txt > sub.txt || { echo "Failed to Base64 encode."; exit 1; }
          echo "Subscription content successfully Base64 encoded into sub.txt."
          rm original_sub.txt # Clean up the original file

      # 4. Commit and push changes if any
      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add sub.txt
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes detected in subscription content."
          else
            git commit -m "Update subscription content (via GitHub Actions)"
            git push
            echo "Changes committed and pushed."
          fi
